---
AWSTemplateFormatVersion: 2010-09-09
Description: "Kurento Media Server CloudFormation template"

Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair for SSH access to the EC2 instance"
    Type: "AWS::EC2::KeyPair::KeyName"
  InstanceType:
    Description: "EC2 instance type used for Kurento Media Server"
    Type: String
    Default: c5.xlarge
    AllowedValues:
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
    ConstraintDescription: "Must be a valid EC2 instance type"
  TurnUser:
    Description: "Username for the static TURN credentials"
    Type: String
    Default: kurento
  TurnPassword:
    Description: "Password for the static TURN credentials"
    Type: String
    Default: kurento
    NoEcho: True

Mappings:
  RegionMap:
    eu-north-1:
      AMI: ami-4bd45f35
    ap-south-1:
      AMI: ami-03dcedc81ea3e7e27
    eu-west-3:
      AMI: ami-080d4d4c37b0aa206
    eu-west-2:
      AMI: ami-0cbe2951c7cd54704
    eu-west-1:
      AMI: ami-03746875d916becc0
    ap-northeast-2:
      AMI: ami-0a25005e83c56767a
    ap-northeast-1:
      AMI: ami-096c57cee908da809
    sa-east-1:
      AMI: ami-09beb384ba644b754
    ca-central-1:
      AMI: ami-0eb3e12d3927c36ef
    ap-southeast-1:
      AMI: ami-04613ff1fdcd2eab1
    ap-southeast-2:
      AMI: ami-000c2343cf03d7fd7
    eu-central-1:
      AMI: ami-0085d4f8878cddc81
    us-east-1:
      AMI: ami-0cfee17793b08a293
    us-east-2:
      AMI: ami-0f93b5fd8f220e428
    us-west-1:
      AMI: ami-09eb5e8a83c7aa890
    us-west-2:
      AMI: ami-0b37e9efc396e4c38

Resources:
  KurentoMediaServer:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install and configure KMS
      AWS::CloudFormation::Init:
        sources:
          - "/home/ubuntu/aws-cli": "https://github.com/aws/aws-cli/tarball/master"
        files:
          "/etc/cfn/cfn-hup.conf":
            content: !Sub |
              [main]
              stack=${AWS::StackId}
              region=${AWS::Region}
            mode: "000400"
            owner: "root"
            group: "root"
          "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
            content: !Sub |
              [cfn-auto-reloader-hook]
              triggers=post.update
              path=Resources.KurentoMediaServer.Metadata.AWS::CloudFormation::Init
              action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource KurentoMediaServer --region ${AWS::Region}
            mode: "000400"
            owner: "root"
            group: "root"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref KurentoMediaServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash

          # Bash options for strict error checking.
          set -o errexit -o errtrace -o pipefail -o nounset
          shopt -s inherit_errexit 2>/dev/null || true

          # Kurento Media Server
          # ====================

          # Make sure that GnuPG is installed (needed for `apt-key adv`).
          sudo apt-get update && sudo apt-get install --yes gnupg

          # Import the Kurento repository signing key.
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5AFA7A83

          # Get Ubuntu version definitions.
          source /etc/lsb-release

          # Add the repository to Apt.
          sudo tee /etc/apt/sources.list.d/kurento.list >/dev/null <<EOF
          # Kurento Media Server - Release packages
          deb [arch=amd64] http://ubuntu.openvidu.io/|RELEASE| ${!DISTRIB_CODENAME} kms6
          EOF

          # Install.
          sudo apt-get update && sudo apt-get install --yes kurento-media-server

          # Enable system service.
          systemctl enable kurento-media-server

          # Coturn
          # ======

          # Install.
          sudo apt-get update && sudo apt-get install --yes coturn kurento-media-server

          # Enable system service.
          sudo tee /etc/default/coturn >/dev/null <<EOF
          TURNSERVER_ENABLED=1
          EOF

          # Configure.
          # shellcheck disable=2154
          sudo tee /etc/turnserver.conf >/dev/null <<EOF
          # The external IP address of this server, if Coturn is behind a NAT.
          # It must be an IP address, not a domain name.
          #external-ip=<CoturnIp>

          # STUN listener port for UDP and TCP.
          # Default: 3478.
          #listening-port=3478

          # TURN lower and upper bounds of the UDP relay ports.
          # Default: 49152, 65535.
          #min-port=49152
          #max-port=65535

          # Uncomment to enable moderately verbose logs.
          # Default: verbose mode OFF.
          #verbose

          # TURN fingerprints in messages.
          fingerprint

          # TURN long-term credential mechanism.
          lt-cred-mech

          # TURN static user account for long-term credential mechanism.
          user=${TurnUser}:${TurnPassword}

          # TURN realm used for the long-term credential mechanism.
          realm=kurento.org

          # Set the log file name.
          # The log file can be reset sending a SIGHUP signal to the turnserver process.
          log-file=/var/log/turn.log

          # Disable log file rollover and use log file name as-is.
          simple-log
          EOF

          # Create the log file, with correct permissions.
          sudo install -o turnserver -g turnserver -m 644 /dev/null /var/log/turn.log

          # Launch script
          # =============

          sudo tee /usr/local/bin/launch-kms.sh >/dev/null <<EOF
          #!/usr/bin/env bash

          # Bash options for strict error checking.
          set -o errexit -o errtrace -o pipefail -o nounset
          shopt -s inherit_errexit 2>/dev/null || true

          # Settings.
          # Uses the AWS link-local address to retrieve instance metadata:
          # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html
          PUBLIC_IP="\$(curl http://169.254.169.254/latest/meta-data/public-ipv4)"

          # Aux function: set value to a given parameter.
          function set_parameter {
              local FILE="\$1"         # File path to be edited.
              local PARAM="\$2"        # Parameter to be set.
              local VALUE="\$3"        # Value to be set into PARAM.
              local COMMENT="\${!4:-;}" # (Optional) Character used for commented-out lines.

              local REGEX="^\${!COMMENT}?\s*\${!PARAM}=.*"

              if grep --extended-regexp -q "\${!REGEX}" "\${!FILE}"; then
                  sed --regexp-extended -i "s/\${!REGEX}/\${!PARAM}=\${!VALUE}/" "\${!FILE}"
              else
                  echo "\${!PARAM}=\${!VALUE}" >>"\${!FILE}"
              fi
          }

          # Config for Coturn.
          set_parameter /etc/turnserver.conf "external-ip" "\${!PUBLIC_IP}" "#"
          systemctl restart coturn

          # Config for Kurento Media Server.
          set_parameter /etc/kurento/modules/kurento/WebRtcEndpoint.conf.ini "turnURL" "${TurnUser}:${TurnPassword}@\${!PUBLIC_IP}:3478" ";"
          systemctl restart kurento-media-server
          EOF
          sudo chmod 755 /usr/local/bin/launch-kms.sh

          # System startup script.
          sudo tee /etc/rc.local >/dev/null <<EOF
          #!/bin/sh -e
          /usr/local/bin/launch-kms.sh
          exit 0
          EOF

          echo "Launching Media Server..."
          sudo /usr/local/bin/launch-kms.sh

          # AWS
          # ===

          sudo apt-get update && sudo apt-get install --yes python python-setuptools
          sudo easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

          sudo /usr/local/bin/cfn-init -s "${AWS::StackId}" -r KurentoMediaServer --region "${AWS::Region}"
          sudo /usr/local/bin/cfn-signal -e $? --stack "${AWS::StackId}" --resource WaitCondition --region "${AWS::Region}"

  KurentoMediaServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "KurentoSecurityGroup ${AWS::StackName}"
      GroupDescription: "SSH and Kurento + Coturn WebRTC ports"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
        - CidrIp: 0.0.0.0/0
          IpProtocol: udp
          FromPort: 0
          ToPort: 65535

  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: 1

Outputs:
  InstanceId:
    Description: "EC2 instance ID of the Media Server"
    Value:
      Ref: KurentoMediaServer
  KurentoURL:
    Value: !Sub "ws://${KurentoMediaServer.PublicIp}:8888/kurento"
    Description: "URL of the Kurento Media Server JSON-RPC API endpoint"
  PublicDnsName:
    Description: "EC2 instance public DNS name"
    Value: !GetAtt KurentoMediaServer.PublicDnsName
  PublicIP:
    Description: "EC2 instance public IP address"
    Value: !GetAtt KurentoMediaServer.PublicIp
