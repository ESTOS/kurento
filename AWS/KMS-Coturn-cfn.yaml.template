---
AWSTemplateFormatVersion: 2010-09-09
Description: "Kurento Media Server CloudFormation template"

Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair for SSH access to the EC2 instance"
    Type: "AWS::EC2::KeyPair::KeyName"
  InstanceType:
    Description: "EC2 instance type used for Kurento Media Server"
    Type: String
    Default: c5.xlarge
    AllowedValues:
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
    ConstraintDescription: "Must be a valid EC2 instance type"
  TurnUser:
    Description: "Username for the static TURN credentials"
    Type: String
    Default: kurento
  TurnPassword:
    Description: "Password for the static TURN credentials"
    Type: String
    Default: kurento
    NoEcho: True

Mappings:
  RegionMap:
    eu-north-1:
      AMI: ami-4bd45f35
    ap-south-1:
      AMI: ami-03dcedc81ea3e7e27
    eu-west-3:
      AMI: ami-080d4d4c37b0aa206
    eu-west-2:
      AMI: ami-0cbe2951c7cd54704
    eu-west-1:
      AMI: ami-03746875d916becc0
    ap-northeast-2:
      AMI: ami-0a25005e83c56767a
    ap-northeast-1:
      AMI: ami-096c57cee908da809
    sa-east-1:
      AMI: ami-09beb384ba644b754
    ca-central-1:
      AMI: ami-0eb3e12d3927c36ef
    ap-southeast-1:
      AMI: ami-04613ff1fdcd2eab1
    ap-southeast-2:
      AMI: ami-000c2343cf03d7fd7
    eu-central-1:
      AMI: ami-0085d4f8878cddc81
    us-east-1:
      AMI: ami-0cfee17793b08a293
    us-east-2:
      AMI: ami-0f93b5fd8f220e428
    us-west-1:
      AMI: ami-09eb5e8a83c7aa890
    us-west-2:
      AMI: ami-0b37e9efc396e4c38

Resources:
  KurentoMediaServer:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install and configure KMS
      AWS::CloudFormation::Init:
        sources:
          - "/home/ubuntu/aws-cli": "https://github.com/aws/aws-cli/tarball/master"
        files:
          "/etc/cfn/cfn-hup.conf":
            content: !Sub |
              [main]
              stack=${AWS::StackId}
              region=${AWS::Region}
            mode: "000400"
            owner: "root"
            group: "root"
          "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
            content: !Sub |
              [cfn-auto-reloader-hook]
              triggers=post.update
              path=Resources.KurentoMediaServer.Metadata.AWS::CloudFormation::Init
              action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource KurentoMediaServer --region ${AWS::Region}
            mode: "000400"
            owner: "root"
            group: "root"
        config:
          files:
            "/opt/cfn-setup.sh":
              source: "https://raw.githubusercontent.com/Kurento/adm-scripts/master/AWS/cfn-setup.sh"
              context:
                KmsVersion: "|RELEASE|"
                TurnUser: !Ref "TurnUser"
                TurnPassword: !Ref "TurnPassword"
              mode: "000555"
              owner: "root"
              group: "root"
          commands:
            setup:
              command: "/opt/cfn-setup.sh"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref KurentoMediaServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

      # Pass a shell script to the Ubuntu AMI's user data (for `cloud-init`).
      # Note that `sudo` is not needed: `cloud-init` already runs as root.
      # Log file for debug: /var/log/cloud-init-output.log
      # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html#user-data-shell-scripts
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash

          # Bash options for strict error checking.
          set -o errexit -o errtrace -o pipefail -o nounset
          shopt -s inherit_errexit 2>/dev/null || true

          # Trace all commands (to stderr).
          set -o xtrace

          # Install and run the CloudFormation helper scripts.
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-helper-scripts-reference.html
          apt-get update && apt-get install --yes python python-pip
          pip install "https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz"

          # Trigger the CloudFormation init helper.
          /usr/local/bin/cfn-init --verbose --stack "${AWS::StackId}" --resource "KurentoMediaServer" --region "${AWS::Region}"

          # Signal the WaitCondition resource with the return code from `cfn-init`.
          /usr/local/bin/cfn-signal --exit-code $? --stack "${AWS::StackId}" --resource "WaitCondition" --region "${AWS::Region}"

  KurentoMediaServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "KurentoSecurityGroup ${AWS::StackName}"
      GroupDescription: "SSH and Kurento + Coturn WebRTC ports"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: "Allow SSH (IPv4)"
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIpv6: ::/0
          Description: "Allow SSH (IPv6)"
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: "WebRTC port range for Kurento Media Server (IPv4 TCP)"
          IpProtocol: tcp
          FromPort: 40000
          ToPort: 57000
        - CidrIpv6: ::/0
          Description: "WebRTC port range for Kurento Media Server (IPv6 TCP)"
          IpProtocol: tcp
          FromPort: 40000
          ToPort: 57000
        - CidrIp: 0.0.0.0/0
          Description: "WebRTC port range for Kurento Media Server (IPv4 UDP)"
          IpProtocol: udp
          FromPort: 40000
          ToPort: 57000
        - CidrIpv6: ::/0
          Description: "WebRTC port range for Kurento Media Server (IPv6 UDP)"
          IpProtocol: udp
          FromPort: 40000
          ToPort: 57000
        - CidrIp: 0.0.0.0/0
          Description: "TURN UDP relay port range for Coturn (IPv4)"
          IpProtocol: udp
          FromPort: 57001
          ToPort: 65535
        - CidrIpv6: ::/0
          Description: "TURN UDP relay port range for Coturn (IPv6)"
          IpProtocol: udp
          FromPort: 57001
          ToPort: 65535

  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: 1

Outputs:
  InstanceId:
    Description: "EC2 instance ID of the Media Server"
    Value:
      Ref: KurentoMediaServer
  KurentoURL:
    Value: !Sub "ws://${KurentoMediaServer.PublicIp}:8888/kurento"
    Description: "URL of the Kurento Media Server JSON-RPC API endpoint"
  PublicDnsName:
    Description: "EC2 instance public DNS name"
    Value: !GetAtt KurentoMediaServer.PublicDnsName
  PublicIP:
    Description: "EC2 instance public IP address"
    Value: !GetAtt KurentoMediaServer.PublicIp
