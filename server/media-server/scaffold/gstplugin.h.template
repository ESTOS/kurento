#ifndef _GST_{{nameSnakeUpperCase}}_H_
#define _GST_{{nameSnakeUpperCase}}_H_

#include <gst/video/gstvideofilter.h>

G_BEGIN_DECLS

#define GST_TYPE_{{nameSnakeUpperCase}} (gst_{{nameSnakeCase}}_get_type ())
#define GST_{{nameSnakeUpperCase}}(obj) \
  (G_TYPE_CHECK_INSTANCE_CAST ((obj), GST_TYPE_{{nameSnakeUpperCase}}, \
      Gst{{nameCamelCase}}))
#define GST_{{nameSnakeUpperCase}}_CLASS(klass) \
  (G_TYPE_CHECK_CLASS_CAST ((klass), GST_TYPE_{{nameSnakeUpperCase}}, \
      Gst{{nameCamelCase}}Class))
#define GST_IS_{{nameSnakeUpperCase}}(obj) \
  (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GST_TYPE_{{nameSnakeUpperCase}}))
#define GST_IS_{{nameSnakeUpperCase}}_CLASS(klass) \
  (G_TYPE_CHECK_CLASS_TYPE ((klass), GST_TYPE_{{nameSnakeUpperCase}}))

typedef struct _Gst{{nameCamelCase}} Gst{{nameCamelCase}};
typedef struct _Gst{{nameCamelCase}}Class Gst{{nameCamelCase}}Class;
typedef struct _Gst{{nameCamelCase}}Private Gst{{nameCamelCase}}Private;

struct _Gst{{nameCamelCase}} {
  GstVideoFilter base;
  Gst{{nameCamelCase}}Private *priv;
};

struct _Gst{{nameCamelCase}}Class {
  GstVideoFilterClass base_{{nameSnakeCase}}_class;
};

GType gst_{{nameSnakeCase}}_get_type (void);

gboolean gst_{{nameSnakeCase}}_plugin_init (GstPlugin *plugin);

G_END_DECLS

#endif // _GST_{{nameSnakeUpperCase}}_H_
