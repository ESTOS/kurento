/* Autogenerated with kurento-module-creator */

#ifndef __POINTER_DETECTOR_FILTER_IMPL_HPP__
#define __POINTER_DETECTOR_FILTER_IMPL_HPP__

#include "FilterImpl.hpp"
#include "PointerDetectorFilter.hpp"
#include <EventHandler.hpp>

namespace kurento
{

class MediaPipeline;
class WindowParam;
class PointerDetectorWindowMediaParam;
class PointerDetectorFilterImpl;

void Serialize (std::shared_ptr<PointerDetectorFilterImpl> &object,
                JsonSerializer &serializer);

class PointerDetectorFilterImpl : public FilterImpl,
  public virtual PointerDetectorFilter
{

public:

  PointerDetectorFilterImpl (std::shared_ptr<MediaPipeline> mediaPipeline,
                             std::shared_ptr<WindowParam> calibrationRegion,
                             const std::vector<std::shared_ptr<PointerDetectorWindowMediaParam>> &windows);

  virtual ~PointerDetectorFilterImpl ();

  void addWindow (std::shared_ptr<PointerDetectorWindowMediaParam> window);
  void clearWindows ();
  void trackColorFromCalibrationRegion ();
  void removeWindow (const std::string &windowId);

  /* Next methods are automatically implemented by code generator */
  virtual bool connect (const std::string &eventType,
                        std::shared_ptr<EventHandler> handler);

  sigc::signal<void, WindowIn> signalWindowIn;
  sigc::signal<void, WindowOut> signalWindowOut;

  virtual void invoke (std::shared_ptr<MediaObjectImpl> obj,
                       const std::string &methodName, const Json::Value &params,
                       Json::Value &response);

  virtual void Serialize (JsonSerializer &serializer);

private:

  GstElement *pointerDetector;
  gulong bus_handler_id;

  std::function<void (GstMessage *) > busMessageLambda;

  class StaticConstructor
  {
  public:
    StaticConstructor();
  };

  static StaticConstructor staticConstructor;

};

} /* kurento */

#endif /*  __POINTER_DETECTOR_FILTER_IMPL_HPP__ */
