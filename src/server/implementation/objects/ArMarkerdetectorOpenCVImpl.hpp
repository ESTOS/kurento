/* Autogenerated with kurento-module-creator */

#ifndef __AR_MARKERDETECTOR_OPENCV_IMPL_HPP__
#define __AR_MARKERDETECTOR_OPENCV_IMPL_HPP__

#include <OpenCVProcess.hpp>
#include "ArMarkerdetector.hpp"
#include <EventHandler.hpp>
#include "pthread.h"

#include "Process.h"

namespace kurento
{
namespace module
{
namespace armarkerdetector
{

class ArMarkerdetectorOpenCVImpl : public virtual OpenCVProcess
{
protected:
  int mShowDebugLevel;
  std::string mOverlayImage;
  std::string mOverlayText;
  float mOverlayScale;
  ArProcess ar;
  pthread_mutex_t mMutex;

public:

  ArMarkerdetectorOpenCVImpl ();
  virtual ~ArMarkerdetectorOpenCVImpl ();

  virtual void process (cv::Mat &mat);

  int getShowDebugLevel ();
  void setShowDebugLevel (int showDebugLevel);

  std::string getOverlayImage ();
  void setOverlayImage (const std::string &overlayImage);

  std::string getOverlayText ();
  void setOverlayText (const std::string &overlayText);

  float getOverlayScale ();
  void setOverlayScale (float overlayScale);

  //sigc::signal<void, markerEvent> signalmarkerEvent;
};

} /* armarkerdetector */
} /* module */
} /* kurento */

#endif /*  __AR_MARKERDETECTOR_OPENCV_IMPL_HPP__ */
